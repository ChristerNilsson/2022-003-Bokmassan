// Generated by CoffeeScript 2.5.1
var TextScroller;

TextScroller = class TextScroller {
  constructor(dx, dy, dw, dh, ts, text) {
    var faktor;
    this.dx = dx;
    this.dy = dy;
    this.dw = dw;
    this.dh = dh;
    this.ts = ts;
    this.text = text;
    textSize(this.ts);
    faktor = 0.5;
    // if window.navigator.userAgent.indexOf('Windows' != -1)
    // 	faktor=0.5
    // else
    // 	faktor=0.25
    this.sz = Math.round(textWidth(this.text));
    if (this.sz <= this.dw) { // scroll behövs ej
      this.pg = createGraphics(this.dw, this.dh);
      //@pg.pixelDensity 1
      this.pg.background("green");
      this.pg.textSize(this.ts);
      this.pg.fill("gray");
      this.pg.textAlign(LEFT, CENTER);
      this.pg.text(this.text, 0, faktor * this.dh); // scroll behövs
    } else {
      this.sz = Math.round(textWidth(this.text + ' • '));
      this.pg = createGraphics(this.sz + this.dw + 100, this.dh);
      //@pg.pixelDensity 1
      this.pg.background("green");
      this.pg.textSize(this.ts);
      this.pg.fill("gray");
      this.pg.textAlign(LEFT, CENTER);
      this.pg.text(this.text + ' • ' + this.text, 0, faktor * this.dh);
      this.p = 0;
    }
  }

  draw() {
    var sh, sw, sx, sy;
    if (this.p === null) { // scroll behövs ej
      return image(this.pg, this.dx, this.dy); // scrolla
    } else {
      sx = this.p;
      sy = 0;
      sw = this.dw;
      sh = this.dh;
      image(this.pg, 0, this.dy + this.dh);
      //image @pg, @dx, @dy
      image(this.pg, this.dx, this.dy, this.dw, this.dh, sx, sy, sw, sh);
      return this.p = (this.p + 1) % this.sz;
    }
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGV4dFNjcm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXFRleHRTY3JvbGxlci5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUE7O0FBQU0sZUFBTixNQUFBLGFBQUE7RUFDQyxXQUFjLEdBQUEsSUFBQSxJQUFBLElBQUEsSUFBQSxNQUFBLENBQUE7QUFDZixRQUFBO0lBRGdCLElBQUMsQ0FBQTtJQUFHLElBQUMsQ0FBQTtJQUFHLElBQUMsQ0FBQTtJQUFHLElBQUMsQ0FBQTtJQUFHLElBQUMsQ0FBQTtJQUFHLElBQUMsQ0FBQTtJQUNuQyxRQUFBLENBQVMsSUFBQyxDQUFBLEVBQVY7SUFDQSxNQUFBLEdBQVMsSUFEWDs7Ozs7SUFNRSxJQUFDLENBQUEsRUFBRCxHQUFNLElBQUksQ0FBQyxLQUFMLENBQVcsU0FBQSxDQUFVLElBQUMsQ0FBQSxJQUFYLENBQVg7SUFDTixJQUFHLElBQUMsQ0FBQSxFQUFELElBQU8sSUFBQyxDQUFBLEVBQVg7TUFDQyxJQUFDLENBQUEsRUFBRCxHQUFNLGNBQUEsQ0FBZSxJQUFDLENBQUEsRUFBaEIsRUFBbUIsSUFBQyxDQUFBLEVBQXBCLEVBQVQ7O01BRUcsSUFBQyxDQUFBLEVBQUUsQ0FBQyxVQUFKLENBQWUsT0FBZjtNQUNBLElBQUMsQ0FBQSxFQUFFLENBQUMsUUFBSixDQUFhLElBQUMsQ0FBQSxFQUFkO01BQ0EsSUFBQyxDQUFBLEVBQUUsQ0FBQyxJQUFKLENBQVMsTUFBVDtNQUNBLElBQUMsQ0FBQSxFQUFFLENBQUMsU0FBSixDQUFjLElBQWQsRUFBbUIsTUFBbkI7TUFDQSxJQUFDLENBQUEsRUFBRSxDQUFDLElBQUosQ0FBUyxJQUFDLENBQUEsSUFBVixFQUFlLENBQWYsRUFBaUIsTUFBQSxHQUFPLElBQUMsQ0FBQSxFQUF6QixFQVBEO0tBQUEsTUFBQTtNQVNDLElBQUMsQ0FBQSxFQUFELEdBQU0sSUFBSSxDQUFDLEtBQUwsQ0FBVyxTQUFBLENBQVUsSUFBQyxDQUFBLElBQUQsR0FBUSxLQUFsQixDQUFYO01BQ04sSUFBQyxDQUFBLEVBQUQsR0FBTSxjQUFBLENBQWUsSUFBQyxDQUFBLEVBQUQsR0FBTSxJQUFDLENBQUEsRUFBUCxHQUFZLEdBQTNCLEVBQWdDLElBQUMsQ0FBQSxFQUFqQyxFQURUOztNQUdHLElBQUMsQ0FBQSxFQUFFLENBQUMsVUFBSixDQUFlLE9BQWY7TUFDQSxJQUFDLENBQUEsRUFBRSxDQUFDLFFBQUosQ0FBYSxJQUFDLENBQUEsRUFBZDtNQUNBLElBQUMsQ0FBQSxFQUFFLENBQUMsSUFBSixDQUFTLE1BQVQ7TUFDQSxJQUFDLENBQUEsRUFBRSxDQUFDLFNBQUosQ0FBYyxJQUFkLEVBQW1CLE1BQW5CO01BQ0EsSUFBQyxDQUFBLEVBQUUsQ0FBQyxJQUFKLENBQVMsSUFBQyxDQUFBLElBQUQsR0FBUSxLQUFSLEdBQWdCLElBQUMsQ0FBQSxJQUExQixFQUErQixDQUEvQixFQUFpQyxNQUFBLEdBQU8sSUFBQyxDQUFBLEVBQXpDO01BQ0EsSUFBQyxDQUFBLENBQUQsR0FBSyxFQWpCTjs7RUFSYTs7RUEyQmQsSUFBTyxDQUFBLENBQUE7QUFDUixRQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBO0lBQUUsSUFBRyxJQUFDLENBQUEsQ0FBRCxLQUFNLElBQVQ7YUFDQyxLQUFBLENBQU0sSUFBQyxDQUFBLEVBQVAsRUFBVSxJQUFDLENBQUEsRUFBWCxFQUFjLElBQUMsQ0FBQSxFQUFmLEVBREQ7S0FBQSxNQUFBO01BR0MsRUFBQSxHQUFLLElBQUMsQ0FBQTtNQUNOLEVBQUEsR0FBSztNQUNMLEVBQUEsR0FBSyxJQUFDLENBQUE7TUFDTixFQUFBLEdBQUssSUFBQyxDQUFBO01BRU4sS0FBQSxDQUFNLElBQUMsQ0FBQSxFQUFQLEVBQVUsQ0FBVixFQUFZLElBQUMsQ0FBQSxFQUFELEdBQUksSUFBQyxDQUFBLEVBQWpCLEVBTEg7O01BU0csS0FBQSxDQUFNLElBQUMsQ0FBQSxFQUFQLEVBQVUsSUFBQyxDQUFBLEVBQVgsRUFBYyxJQUFDLENBQUEsRUFBZixFQUFrQixJQUFDLENBQUEsRUFBbkIsRUFBc0IsSUFBQyxDQUFBLEVBQXZCLEVBQTBCLEVBQTFCLEVBQTZCLEVBQTdCLEVBQWdDLEVBQWhDLEVBQW1DLEVBQW5DO2FBRUEsSUFBQyxDQUFBLENBQUQsR0FBSyxDQUFDLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBSixDQUFBLEdBQVMsSUFBQyxDQUFBLEdBZGhCOztFQURNOztBQTVCUiIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFRleHRTY3JvbGxlclxyXG5cdGNvbnN0cnVjdG9yIDogKEBkeCxAZHksQGR3LEBkaCxAdHMsQHRleHQpIC0+XHJcblx0XHR0ZXh0U2l6ZSBAdHNcclxuXHRcdGZha3RvciA9IDAuNVxyXG5cdFx0IyBpZiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdXaW5kb3dzJyAhPSAtMSlcclxuXHRcdCMgXHRmYWt0b3I9MC41XHJcblx0XHQjIGVsc2VcclxuXHRcdCMgXHRmYWt0b3I9MC4yNVxyXG5cdFx0QHN6ID0gTWF0aC5yb3VuZCB0ZXh0V2lkdGggQHRleHRcclxuXHRcdGlmIEBzeiA8PSBAZHcgIyBzY3JvbGwgYmVow7Z2cyBlalxyXG5cdFx0XHRAcGcgPSBjcmVhdGVHcmFwaGljcyBAZHcsQGRoXHJcblx0XHRcdCNAcGcucGl4ZWxEZW5zaXR5IDFcclxuXHRcdFx0QHBnLmJhY2tncm91bmQgXCJncmVlblwiXHJcblx0XHRcdEBwZy50ZXh0U2l6ZSBAdHNcclxuXHRcdFx0QHBnLmZpbGwgXCJncmF5XCJcclxuXHRcdFx0QHBnLnRleHRBbGlnbiBMRUZULENFTlRFUlxyXG5cdFx0XHRAcGcudGV4dCBAdGV4dCwwLGZha3RvcipAZGhcclxuXHRcdGVsc2UgIyBzY3JvbGwgYmVow7Z2c1xyXG5cdFx0XHRAc3ogPSBNYXRoLnJvdW5kIHRleHRXaWR0aCBAdGV4dCArICcg4oCiICdcclxuXHRcdFx0QHBnID0gY3JlYXRlR3JhcGhpY3MgQHN6ICsgQGR3ICsgMTAwLCBAZGhcclxuXHRcdFx0I0BwZy5waXhlbERlbnNpdHkgMVxyXG5cdFx0XHRAcGcuYmFja2dyb3VuZCBcImdyZWVuXCJcclxuXHRcdFx0QHBnLnRleHRTaXplIEB0c1xyXG5cdFx0XHRAcGcuZmlsbCBcImdyYXlcIlxyXG5cdFx0XHRAcGcudGV4dEFsaWduIExFRlQsQ0VOVEVSXHJcblx0XHRcdEBwZy50ZXh0IEB0ZXh0ICsgJyDigKIgJyArIEB0ZXh0LDAsZmFrdG9yKkBkaFxyXG5cdFx0XHRAcCA9IDBcclxuXHJcblx0ZHJhdyA6ICgpIC0+XHJcblx0XHRpZiBAcCA9PSBudWxsICMgc2Nyb2xsIGJlaMO2dnMgZWpcclxuXHRcdFx0aW1hZ2UgQHBnLEBkeCxAZHlcclxuXHRcdGVsc2UgIyBzY3JvbGxhXHJcblx0XHRcdHN4ID0gQHBcclxuXHRcdFx0c3kgPSAwXHJcblx0XHRcdHN3ID0gQGR3XHJcblx0XHRcdHNoID0gQGRoXHJcblxyXG5cdFx0XHRpbWFnZSBAcGcsMCxAZHkrQGRoXHJcblxyXG5cdFx0XHQjaW1hZ2UgQHBnLCBAZHgsIEBkeVxyXG5cclxuXHRcdFx0aW1hZ2UgQHBnLEBkeCxAZHksQGR3LEBkaCxzeCxzeSxzdyxzaFxyXG5cclxuXHRcdFx0QHAgPSAoQHArMSkgJSBAc3pcclxuIl19
//# sourceURL=c:\github\2022-003-Bokmassan\coffee\TextScroller.coffee